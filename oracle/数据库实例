* 实例由内存结构和后台进程组成，
    内存结构分为共享全局区 SGA 和程序全局区 PGA 
    后台进程包括 DBWR , LGWR , CKPT , SMON , PMON , ARCH 等等
  用户通过数据库实例操作数据库管理系统来管理物理数据库
  启动数据库时，oracle 在内存中建立一个数据库实例（nomount），然后实例装载控制文件（mount），最后再装载物理文件（open）

* SGA 包括数据高速缓冲区，重做日志缓冲区，共享池，大型池，java 池，流池等等
    数据高速缓冲区  db_cache_size
        脏缓存块    被写入数据的空闲缓存块
        空闲缓存块  等待服务器进程或后台进程写入数据
        命中缓存块  
        oracle 通过脏缓存块列表和 LRU 列表来管理缓存块
            脏缓存块列表包含脏缓存块，等待 DBWR 将其写入数据文件中
            LRU 列表 least recently used ，包含脏缓存块，命中缓存块和空闲缓存块，最近被访问过的在前，不常用的会被移除 
                当需要用到某数据时，服务器进程会先在数据缓存区中查找，
                如果有，则回馈给用户；如果没有，则读取数据文件中需要的内容，
                然后从 LRU 列表尾部开始查找足够大小的空闲块，如果找到则写入，
                如果找到的是脏缓存块则将其移入脏缓存块列表，
                如果找到最后都没找到则启动 DBWR 将脏缓存块列表中的缓存块写入数据文件，将其转化为空闲块移入 LRU 列表，然后重新找
    重做日志缓冲区  log_buffer
        数据在高速缓冲区中操作，然后操作的记录记载到重做日志缓冲区中，
        当检查点事件发生或 DBWR 启动时会通知 LGWR 将重做日志缓冲区中的数据写入重做日志文件中，
        而当切换重做日志文件或重做日志文件被写满时会启动 ARCH 将重做日志文件写入归档文件中
    共享池          shared_pool_size
        共享池由库缓存和数据字典缓存组成，用来缓存 sql 语句，pl/sql 程序和数据字典信息
            库缓存 library cache ，包括 sql 工作区和 pl/sql 工作区
                sql 和 pl/sql 相当于源代码，执行时需要编译，语法检查之类，占用系统资源，
                库缓存把最近执行过的这类操作缓存起来，提高执行效率
                sql 工作区分公有和私有，私有工作区只有在共享服务器模式才会在 sga 创建，否则在 pga 中
    SGA 中内存管理以特定单位（granule）进行，内存大小一定是 granule 的整数倍
    SGA_TARGET
        可以通过设置 sga_target 来实现自动管理数据高速缓冲区，共享池，大型池，java 池和流池，但是日志缓冲区和非标准块的数据高速缓冲区还是需要 DBA 调整
        sga_target 的值不能超过 sga_max_size，可以通过 show parameter sga 查看，当自动管理开启时所有要实现自动管理的组件的值需要设为0
        当 sga_target 值为 0 时，关闭自动管理  
            
* 后台进程
    oracle 中进程分为用户进程，服务器进程和后台进程。
        用户进程提出请求给服务器进程，服务器进程调用相应的后台进程完成请求并响应
        用户进程通过连接产生会话
        服务器进程分为专用服务器进程和共享服务器进程，用户进程必须通过服务器进程才能访问数据库
        后台进程包括 DBWR , LGWR , CKPT , SMON ,PMON , ARCH , RECO , LCKn , Dnnn 等，前五个是必须的
            DBWR    负责将脏缓存块写入数据文件中，通过 db_write_process 可以设置该进程数量，但是如果进程数量超过 cpu 数目并不会提高性能
            LGWR    当有一个事务提交语句执行时将该事务写入重做日志文件中，叫快速提交；
                    当有一个事务提交语句执行时将所有缓存写入重做日志文件中，叫组提交，有 commit  的事务有记录，而没有的则没有
            CKPT    检查点是一个事件，当有一个检查点事件发生时，所有缓存写入相应的文件中。备份与恢复与该进程有关
            SMON|PMON   恢复不正常的进程和回收多余的资源
            ARCH    数据库运行在归档模式，并且 log_archive_start 为 true 时启动自动归档
            RECO    处理分布式数据库的分布式事务的故障，当一个连接失败时经过一段时间之后进行重连
            LCKn    实例间封锁
            Dnnn    将用户请求放入一个请求队列，然后为它们分配服务器进程
            注意：DBWR 运行时会使 LGWR 运行，但反之不会
				  RECO 不是用来恢复数据库的,而是用来恢复数据库连接的
    
* 数据库的打开与关闭
    startup nomount         读取初始化参数并创建数据库实例
    startup mount           打开控制文件
    startup [open]          读取所有数据文件和重做日志文件，打开数据库
    startup [...] restrict  以受限方式打开数据库到特定状态，即 restricted session ，需要有 dba 权限，相当于安全模式
        startup mount restrict;
        alter system enable/disable restricted session;    修改的是初始化参数
    startup pfile=absolute_filename
      启动数据库时，系统按照下列顺序寻找初始化参数文件：
        1、检查是否用pfile参数指定了文本初始化参数文件
        2、如果没有使用pfile参数，则在默认位置寻找默认名称服务器初始化参数文件
        3、没有找到默认的服务器初始化参数文件，则在默认的位置寻找默认名称的文本初始化参数文件
        服务器初始化参数是以文本初始化参数为模板创建的，是二进制文件
    alter database          改变数据库的状态，只能向前 
        startup mount;
        alter database open;    //  只读模式在最后加上 read only ，默认为 read write
    shutdown [normal]       等待用户断开链接
    shutdown immediate      回滚所有未完成事务，终止用户连接
    shutdown transaction    等待事务结束或回滚，终止用户连接
    shutdown abort          相当于电脑强制断电，重启需要恢复
    
-------------------------------------------------
	
* DBWR 写入的是数据,LGWR 写入的是操作记录 


